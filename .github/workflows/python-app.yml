# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  quality-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | POETRY_HOME=$HOME/.poetry python3 - 
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    
    - run: poetry config virtualenvs.in-project true
    - run: poetry install

    - uses: actions/cache@v2
      id: venv_cache
      with:
        path: .venv
        key: venv-3.11-${{ hashFiles('**/poetry.lock') }}

    - name: Install Dependencies
      if: steps.venv_cache.outputs.cache-hit != 'true'
      run: poetry install
      
    - run: poetry run task lint
    - run: task format
    - run: task typecheck 

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - uses: Gr1N/setup-poetry@v8
    - run: poetry config virtualenvs.create false
    - run: poetry install
    - run: playwright install
    - run: task debug &
    - run: task test_norun
